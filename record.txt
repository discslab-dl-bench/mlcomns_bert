<TFRecordDatasetV1 shapes: (), types: tf.string>
{'input_ids': <tf.Tensor: id=45, shape=(512,), dtype=int64, numpy=
array([  101,  1999,  2325,  2019, 18077,  2008,  3039,   103, 11974,
       19275,  1055,  5267, 17083,  2000,  5114,   103,  1997,  1996,
       20369,  2291,  1010,  1998,  2947,  2022,  2583,  2000, 15389,
       24391,  3642,  1010,  2001,   103,  1999,  2544,  1015,  1012,
        4868,  1025,  1037,  6822,  4964, 19236,  3857,  2001,  2207,
         103, 12736,  1012,   102,   103,  2020,  3515,  2575,   103,
         103,  2012,   103,  2779,  4304,  1997, 19627,  1012,  1017,
        1013,  3186,  4679, 23523,  1012,  1016,  1013,  2771,   103,
        1007, 27638,  1996,  5762,  5789,  1997,  1996,  8561,  2001,
        5818,  1012,  2656,  1003,  2317,  1010,  1014,  1012,  2423,
        1003,  3128,  2137,  1010,  1014,   103,  2423,  1003,  4004,
        1010,  1014,  1012,  5757,  1003,  3534, 12544,  1010,  1998,
        1015,  1012,  2324,  1003,  2013,  2048,  2030,  2062,  3837,
        1012,  6696,  2030,  7402,  1997,  2151,  2679,  2020,  1014,
         103,  2753,  1003,  1997,  1996,  2313,  1012,  2045,  2020,
         103,  2487,  3911,  2041,  1997,  2029,  2656,  1012,  1016,
        1003,  2018,  2336, 14199,  1996,  2287,  1997,  2324,  2542,
        2007,   103,  1010,  4700,  1012,  1022,  1003,  2020,  2496,
        6062,  2542,  2362,  1010,  1023,  1012,  1014,  1003,  2018,
         103,   103,  7536,  2007,  2053,  3129,  2556,  1010,  1998,
        2871,   103,  1015,  1003,  2020,  2512,  1011,  2945,  1012,
        4090,  1012,  1022,  1003,   103,  2035,  3911,  2020,  2081,
        2039,  1997,  3633,  1998,  2459,   103,  1014,  1003,  2018,
        2619,  2542,  2894,  2040,  2001,  3515,  2086,  1997,  2287,
        2030,  3080,  1012,  1996,  2779,  4398,  2946,  2001,  1016,
        1012,   103,  1998, 20951,  2779,  2155,  2946,   103,  1016,
        1012,   103,  1012,  1999,  1996,  8561,   103,  1996,  2313,
        2001,  3659,  2041,  2007,  2459,  1012,   103,   103,  2104,
        1996,  2287,  1997,  2324,  1010,   103,  1012,  1021,   103,
         103,  2324,  2000,  2484,  1010,  2538,  1012,  1018,  1003,
        2013,  2423,  2000, 20349,  1010,  2538,  1012,  1015,  1003,
        2013,  3429,   103,  4185,  1010,  1998,  3486,  1012,  1022,
        1003,  2040,  7609,  3515,  2086,  1997,  2287,  2030,   103,
        1012,  1996,   103,  2287,   103,  2753,  2086,  1012,  2005,
        2296,  2531,  3801,  1010,  2045,   103,  6273,  1012,  1016,
        3767,  1012,  2005,  2296, 25836,  3801,  2287,  2324,  1998,
        2058,   103,  2045,  2020,  5786,  1012,  1019,  3767,   103,
        1996,  3991,  3318,  2005,  1037,  4398,  1999,  1996, 20597,
        2001,  1002,   103,   103, 27658,  1010,   103,  1996,  3991,
        3318,  2005,  1037,  2155,   103,  1002,  4720,  1010,   103,
        1012,  3767,  2018,  1037,  3991,  3318,  1997,  1002,  4261,
        1010, 16785,  6431,  1002,  2676,  1010,  6353,  2475,  2005,
        3801,  1012,   103,  2566,  8353,  3318,  2005,  1996,   103,
        2001,  1002,  2322,  1010,  6390, 23231,   103,  2055,  1017,
        1012,  1017,  1003,  1997,  2945,  1998,   103,  1012,  1018,
        1003,  1997,  1996,   103,  2020,  2917,  1996,  5635,  2240,
        1010,  2164,  2260,  1012,  1016,  1003,  1997,   103,  2104,
         103,  2324,   103,  1019,  1012,  1015,  1003,  1997,   103,
        2287,  3515,  2030,  2058,  1012,   102,     0,     0,     0,
           0,     0,     0,     0,     0,     0,     0,     0,     0,
           0,     0,     0,     0,     0,     0,     0,     0,     0,
           0,     0,     0,     0,     0,     0,     0,     0,     0,
           0,     0,     0,     0,     0,     0,     0,     0,     0,
           0,     0,     0,     0,     0,     0,     0,     0,     0,
           0,     0,     0,     0,     0,     0,     0,     0,     0,
           0,     0,     0,     0,     0,     0,     0,     0,     0,
           0,     0,     0,     0,     0,     0,     0,     0])>, 'input_mask': <tf.Tensor: id=46, shape=(512,), dtype=int64, numpy=
array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0])>, 'masked_lm_ids': <tf.Tensor: id=47, shape=(76,), dtype=int64, numpy=
array([ 3039,  1037,  2491,  3677,  3603,  3857,  3859,  5728,  2045,
        3847,  3197,  2019,  1006, 10701,  1012,  3128,  1012,  1014,
        1012,  5388,  2104,  2068,  1022,  1037,  2931,  1998,  1012,
        1997,  1012,  2539,  1996,  2001,  6391,  1010,  1014,  1003,
        1018,  1003,  2013,  4008,  2000,  2020,  3080,  3991,  2001,
        2020,  2531,  1010,  1012,  8561,  2001,  4601,  1010,  1998,
        2001, 25797,  1996,  8561,  2475,  1012,  1021,  2313,  2216,
        2287,  1998,  2216,     0,     0,     0,     0,     0,     0,
           0,     0,     0,     0])>, 'masked_lm_positions': <tf.Tensor: id=48, shape=(76,), dtype=int64, numpy=
array([  6,   7,  15,  18,  31,  42,  45,  46,  49,  53,  54,  56,  65,
        71,  73,  91,  95, 100, 126, 135, 147, 154, 158, 171, 172, 179,
       181, 193, 203, 226, 228, 232, 235, 240, 249, 250, 257, 260, 261,
       273, 281, 290, 296, 299, 301, 311, 319, 325, 332, 341, 342, 344,
       345, 348, 355, 359, 380, 386, 392, 393, 402, 408, 421, 423, 425,
       431,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0])>, 'masked_lm_weights': <tf.Tensor: id=49, shape=(76,), dtype=float32, numpy=
array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)>, 'next_sentence_labels': <tf.Tensor: id=50, shape=(1,), dtype=int64, numpy=array([1])>, 'segment_ids': <tf.Tensor: id=51, shape=(512,), dtype=int64, numpy=
array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0])>}
